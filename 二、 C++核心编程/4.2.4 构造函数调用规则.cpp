//#include"head.h"
//
////默认情况下，c++编译器至少给一个类添加3个函数
////默认构造函数(无参，函数体为空)		空实现
////默认析构函数(无参，函数体为空)		空实现
////默认拷贝构造函数，对属性进行值拷贝	值拷贝
//
////构造函数调用规则如下:
////如果用户自己写了有参构造函数，那么编译器就不再提供无参构造函数，依然提供拷贝构造
////如果用户自己写了拷贝构造函数，那么编译器就不再提供其他普通构造函数了
//
////或者说用户自己写的高级构造函数会屏蔽掉编译器默认的低级构造函数
//
//class Person
//{
//public:
//	//构造函数
//	//Person() {
//	//	m_Age = 0;
//	//	cout << "无参构造函数！" << endl;
//	//}
//	//Person(int age) {
//	//	m_Age = age;
//	//	cout << "有参构造函数！" << endl;
//	//}
//	Person(const Person &p) {
//		cout << "拷贝构造函数！" << endl;
//		m_Age = p.m_Age;
//	}
//	//析构函数
//	~Person() {
//		cout << "析构函数！" << endl;
//	}
//public:
//	int m_Age;
//};
//
////void test01() {
////	Person p1(18);
////	Person p2(p1);
////
////	cout << "p2的年龄为: " << p2.m_Age << endl;
////}
//
//void test02() {
//	//Person p1(28);
//	Person p2 = p2; //当我们自己提供拷贝构造函数时，编译器将不再提供其他普通构造函数，可以这样进行构造初始化对象
//	p2.m_Age = 38;
//
//	cout << "p2的年龄为: " << p2.m_Age << endl;
//}
//
//int main() {
//
//	//test01();
//	test02();
//
//	system("pause");
//	return 0;
//}